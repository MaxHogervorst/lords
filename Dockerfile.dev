FROM dunglas/frankenphp:1-php8.4-alpine

# Install system dependencies
RUN apk add --no-cache \
    git \
    curl \
    libpng-dev \
    oniguruma-dev \
    libxml2-dev \
    zip \
    unzip \
    libzip-dev \
    postgresql-client \
    postgresql-dev \
    freetype-dev \
    libjpeg-turbo-dev \
    linux-headers \
    nodejs \
    npm

# Install PHP extensions required by Laravel and Octane
RUN install-php-extensions \
    pdo_pgsql \
    pgsql \
    mbstring \
    exif \
    pcntl \
    bcmath \
    gd \
    zip \
    sockets \
    opcache

# Configure OPcache for development (enable validation)
RUN { \
    echo 'opcache.enable=1'; \
    echo 'opcache.enable_cli=1'; \
    echo 'opcache.memory_consumption=128'; \
    echo 'opcache.interned_strings_buffer=8'; \
    echo 'opcache.max_accelerated_files=10000'; \
    echo 'opcache.validate_timestamps=1'; \
    echo 'opcache.revalidate_freq=0'; \
    echo 'opcache.save_comments=1'; \
    } > /usr/local/etc/php/conf.d/opcache.ini

# Configure PHP for development
RUN { \
    echo 'display_errors=On'; \
    echo 'log_errors=On'; \
    echo 'error_log=/var/www/storage/logs/php-error.log'; \
    echo 'memory_limit=512M'; \
    } > /usr/local/etc/php/conf.d/development.ini

# Get latest Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www

# Expose port 8080
EXPOSE 8080

# Start script for development
# Note: composer install and permissions will be handled by volume mount
CMD ["sh", "-c", "composer install && chmod -R 777 storage bootstrap/cache && php artisan octane:frankenphp --host=0.0.0.0 --port=8080 --workers=1 --max-requests=500 --watch"]
